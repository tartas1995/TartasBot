var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { Message } from "../../Message.mjs";
import { MessageParamDefinition, MessageType } from "../../MessageDefinition.mjs";
var CapabilityNegotiation = /** @class */ (function (_super) {
    __extends(CapabilityNegotiation, _super);
    function CapabilityNegotiation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CapabilityNegotiation_1 = CapabilityNegotiation;
    CapabilityNegotiation.prototype.isResponseTo = function (originalMessage) {
        if (!(originalMessage instanceof CapabilityNegotiation_1)) {
            return false;
        }
        switch (this.params.subCommand) {
            case 'ACK':
            case 'NAK': {
                // trim is necessary because some networks seem to add trailing spaces (looking at you, Freenode)...
                return (originalMessage.params.subCommand === 'REQ' &&
                    originalMessage.params.capabilities === this.params.capabilities.trim());
            }
            case 'LS':
            case 'LIST': {
                return originalMessage.params.subCommand === this.params.subCommand;
            }
            default: {
                return false;
            }
        }
    };
    CapabilityNegotiation.prototype.endsResponseTo = function (originalMessage) {
        if (!(originalMessage instanceof CapabilityNegotiation_1)) {
            return false;
        }
        switch (this.params.subCommand) {
            case 'LS':
            case 'LIST': {
                return !this.params.continued;
            }
            default: {
                return true;
            }
        }
    };
    var CapabilityNegotiation_1;
    CapabilityNegotiation.SUPPORTS_CAPTURE = true;
    __decorate([
        MessageParamDefinition({
            match: /^(?:[a-z_\-\[\]\\^{}|`][a-z0-9_\-\[\]\\^{}|`]+|\*)$/i,
            optional: true,
            noClient: true
        })
    ], CapabilityNegotiation.prototype, "target", void 0);
    __decorate([
        MessageParamDefinition({
            match: /^(?:LS|LIST|REQ|ACK|NAK|END|NEW|DEL)$/i
        })
    ], CapabilityNegotiation.prototype, "subCommand", void 0);
    __decorate([
        MessageParamDefinition({
            match: /^\d+$/,
            optional: true
        })
    ], CapabilityNegotiation.prototype, "version", void 0);
    __decorate([
        MessageParamDefinition({
            match: /^\*$/,
            optional: true
        })
    ], CapabilityNegotiation.prototype, "continued", void 0);
    __decorate([
        MessageParamDefinition({
            trailing: true,
            optional: true
        })
    ], CapabilityNegotiation.prototype, "capabilities", void 0);
    CapabilityNegotiation = CapabilityNegotiation_1 = __decorate([
        MessageType('CAP')
    ], CapabilityNegotiation);
    return CapabilityNegotiation;
}(Message));
export { CapabilityNegotiation };
